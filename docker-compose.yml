version: '3.8'

services:

  # === API Gateway ===
  api-gateway:
    build: ./api-gateway
    ports:
      - "3000:3000"
    depends_on:
      - user-service
      - order-service
      - payment-service
      - notification-service
    environment:
      - JWT_SECRET=${JWT_SECRET}
      - USER_SERVICE_URL=${USER_SERVICE_URL}
      - ORDER_SERVICE_URL=${ORDER_SERVICE_URL}
      - PAYMENT_SERVICE_URL=${PAYMENT_SERVICE_URL}
      - NOTIFICATION_SERVICE_URL=${NOTIFICATION_SERVICE_URL}

  # === User Service ===
  user-service:
    build: ./user-service
    environment:
      - PORT=${USER_PORT}
      - MONGO_URL=${USER_MONGO_URL}
      - JWT_SECRET=${JWT_SECRET}
    depends_on:
      - mongo

  # === Order Service ===
  order-service:
    build: ./order-service
    environment:
      - PORT=${ORDER_PORT}
      - MONGO_URL=${ORDER_MONGO_URL}
      - JWT_SECRET=${JWT_SECRET}
    depends_on:
      - mongo

  # === Payment Service ===
  payment-service:
    build: ./payment-service
    environment:
      - PORT=${PAYMENT_PORT}
      - MONGO_URL=${PAYMENT_MONGO_URL}
      - JWT_SECRET=${JWT_SECRET}
    depends_on:
      - mongo

  # === Notification Service ===
  notification-service:
    build: ./notification-service
    environment:
      - PORT=${NOTIFICATION_PORT}
      - RABBITMQ_URL=${RABBITMQ_URL}
      - QUEUE_NAME=${QUEUE_NAME}
    depends_on:
      - rabbitmq

  # === MongoDB ===
  mongo:
    image: mongo
    restart: always
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${MONGO_INITDB_ROOT_USERNAME}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_INITDB_ROOT_PASSWORD}
    ports:
      - "27017:27017"

  # === RabbitMQ ===
  rabbitmq:
    image: rabbitmq:3-management
    ports:
      - "5672:5672"
      - "15672:15672"
    environment:
      - RABBITMQ_DEFAULT_USER=${RABBITMQ_DEFAULT_USER}
      - RABBITMQ_DEFAULT_PASS=${RABBITMQ_DEFAULT_PASS}
      - RABBITMQ_LOAD_DEFINITIONS=true
      - RABBITMQ_DEFINITIONS_FILE=/etc/rabbitmq/definitions.json
    volumes:
      - ./rabbitmq/definitions.json:/etc/rabbitmq/definitions.json

  # === Prometheus ===
  prometheus:
    image: prom/prometheus
    volumes:
      - ./monitoring/prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
    ports:
      - "9090:9090"

  # === Loki ===
  loki:
    image: grafana/loki:2.8.2
    ports:
      - "3100:3100"
    volumes:
      - ./monitoring/loki/loki-config.yaml:/etc/loki/config.yaml
    command: -config.file=/etc/loki/config.yaml

  # === Grafana ===
  grafana:
    image: grafana/grafana
    ports:
      - "3001:3000"
    volumes:
      - ./monitoring/grafana/provisioning/datasources:/etc/grafana/provisioning/datasources
      - ./monitoring/grafana/provisioning/dashboards:/etc/grafana/provisioning/dashboards
      - ./monitoring/grafana/dashboards:/var/lib/grafana/dashboards
      - ./monitoring/grafana/grafana.ini:/etc/grafana/grafana.ini
    environment:
      - GF_SECURITY_ADMIN_USER=${GF_SECURITY_ADMIN_USER}
      - GF_SECURITY_ADMIN_PASSWORD=${GF_SECURITY_ADMIN_PASSWORD}
    depends_on:
      - prometheus
      - loki